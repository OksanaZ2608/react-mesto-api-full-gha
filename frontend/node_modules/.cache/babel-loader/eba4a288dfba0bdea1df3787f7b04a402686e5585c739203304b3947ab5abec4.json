{"ast":null,"code":"import _classCallCheck from\"/Users/oksanazagorodneva/react-mesto-api-full-gha/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"/Users/oksanazagorodneva/react-mesto-api-full-gha/frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";var Api=/*#__PURE__*/function(){function Api(options){_classCallCheck(this,Api);this._url=options.url;this._headers=options.headers;//this._authorization = options.headers.authorization;\n}_createClass(Api,[{key:\"_checkResponse\",value:function _checkResponse(res){if(res.ok){return res.json();}return Promise.reject(\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: \".concat(res.status));}},{key:\"getUserInfo\",value:function getUserInfo(){return fetch(\"\".concat(this._url,\"/users/me\"),{headers:this._headers}).then(this._checkResponse);}},{key:\"getInitialCards\",value:function getInitialCards(){return fetch(\"\".concat(this._url,\"/cards\"),{headers:this._headers}).then(this._checkResponse);}},{key:\"setUserInfo\",value:function setUserInfo(name,about){return fetch(\"\".concat(this._url,\"/users/me\"),{method:'PATCH',headers:this._headers,body:JSON.stringify({name:name,about:about})}).then(this._checkResponse);}},{key:\"addNewCard\",value:function addNewCard(name,link){return fetch(\"\".concat(this._url,\"/cards\"),{method:'POST',headers:this._headers,body:JSON.stringify({name:name,link:link})}).then(this._checkResponse);}},{key:\"getLikes\",value:function getLikes(){return fetch(\"\".concat(this._url,\"/cards\"),{headers:this._headers}).then(this._checkResponse);}},{key:\"deleteCard\",value:function deleteCard(cardId){return fetch(\"\".concat(this._url,\"/cards/\").concat(cardId),{method:'DELETE',headers:this._headers}).then(this._checkResponse);}},{key:\"addLike\",value:function addLike(cardId){return fetch(\"\".concat(this._url,\"/cards/\").concat(cardId,\"/likes\"),{method:'PUT',headers:this._headers}).then(this._checkResponse);}},{key:\"deleteLike\",value:function deleteLike(cardId){return fetch(\"\".concat(this._url,\"/cards/\").concat(cardId,\"/likes\"),{method:'DELETE',headers:this._headers}).then(this._checkResponse);}},{key:\"changeAvatar\",value:function changeAvatar(avatar){return fetch(\"\".concat(this._url,\"/users/me/avatar\"),{method:'PATCH',headers:this._headers,body:JSON.stringify({avatar:avatar})}).then(this._checkResponse);}}]);return Api;}();var api=new Api({//url: 'https://api.domainoksana.nomoredomainsrocks.ru'\nurl:'localhost:3030'});export default api;","map":{"version":3,"names":["Api","options","_classCallCheck","_url","url","_headers","headers","_createClass","key","value","_checkResponse","res","ok","json","Promise","reject","concat","status","getUserInfo","fetch","then","getInitialCards","setUserInfo","name","about","method","body","JSON","stringify","addNewCard","link","getLikes","deleteCard","cardId","addLike","deleteLike","changeAvatar","avatar","api"],"sources":["/Users/oksanazagorodneva/react-mesto-api-full-gha/frontend/src/utils/Api.js"],"sourcesContent":["class Api {\n    constructor(options) {\n      this._url = options.url;\n      this._headers = options.headers;\n      //this._authorization = options.headers.authorization;\n    }\n  \n    _checkResponse(res) {\n      if (res.ok) {\n        return res.json();\n      }\n  \n      return Promise.reject(`Ошибка: ${res.status}`);\n    }\n  \n    getUserInfo() {\n      return fetch(`${this._url}/users/me`, {\n        headers: this._headers\n      })\n      .then(this._checkResponse)\n    }\n  \n    getInitialCards() {\n      return fetch(`${this._url}/cards`, {\n        headers: this._headers\n      })\n      .then(this._checkResponse)\n    }\n  \n    setUserInfo(name, about) {\n      return fetch(`${this._url}/users/me`, {\n        method: 'PATCH',\n        headers: this._headers,\n        body: JSON.stringify({ name, about })\n      })\n      .then(this._checkResponse)\n    }\n  \n    addNewCard(name, link) {\n      return fetch(`${this._url}/cards`, {\n        method: 'POST',\n        headers: this._headers,\n        body: JSON.stringify({ name, link })\n      })\n      .then(this._checkResponse)\n    }\n  \n    getLikes() {\n      return fetch(`${this._url}/cards`, {\n        headers: this._headers\n      })\n      .then(this._checkResponse)\n    }\n  \n    deleteCard(cardId) {\n      return fetch(`${this._url}/cards/${cardId}`, {\n        method: 'DELETE',\n        headers: this._headers\n      })\n      .then(this._checkResponse)\n    }\n  \n    addLike(cardId) {\n      return fetch(`${this._url}/cards/${cardId}/likes`, {\n        method: 'PUT',\n        headers: this._headers\n      })\n      .then(this._checkResponse)\n    }\n  \n    deleteLike(cardId) {\n      return fetch(`${this._url}/cards/${cardId}/likes`, {\n        method: 'DELETE',\n        headers: this._headers\n      })\n      .then(this._checkResponse)\n    }\n  \n    changeAvatar(avatar) {\n      return fetch(`${this._url}/users/me/avatar`, {\n        method: 'PATCH',\n        headers: this._headers,\n        body: JSON.stringify({avatar})\n      })\n      .then(this._checkResponse)\n    }  \n  }\n\nconst api = new Api({\n    //url: 'https://api.domainoksana.nomoredomainsrocks.ru'\n    url: 'localhost:3030'\n});\n\nexport default api;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}