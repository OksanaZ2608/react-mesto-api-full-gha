{"ast":null,"code":"class Api {\n  constructor(options) {\n    this._url = options.url;\n    this._headers = options.headers;\n    this._authorization = options.headers.authorization;\n  }\n  _checkResponse(res) {\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject(`Ошибка: ${res.status}`);\n  }\n  getUserInfo() {\n    return fetch(`${this._url}/users/me`, {\n      headers: this._headers\n    }).then(this._checkResponse);\n  }\n  getInitialCards() {\n    return fetch(`${this._url}/cards`, {\n      headers: this._headers\n    }).then(this._checkResponse);\n  }\n  setUserInfo(name, about) {\n    return fetch(`${this._url}/users/me`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        name,\n        about\n      })\n    }).then(this._checkResponse);\n  }\n  addNewCard(name, link) {\n    return fetch(`${this._url}/cards`, {\n      method: 'POST',\n      headers: this._headers,\n      body: JSON.stringify({\n        name,\n        link\n      })\n    }).then(this._checkResponse);\n  }\n  getLikes() {\n    return fetch(`${this._url}/cards`, {\n      headers: this._headers\n    }).then(this._checkResponse);\n  }\n  deleteCard(cardId) {\n    return fetch(`${this._url}/cards/${cardId}`, {\n      method: 'DELETE',\n      headers: this._headers\n    }).then(this._checkResponse);\n  }\n  addLike(cardId) {\n    return fetch(`${this._url}/cards/${cardId}/likes`, {\n      method: 'PUT',\n      headers: this._headers\n    }).then(this._checkResponse);\n  }\n  deleteLike(cardId) {\n    return fetch(`${this._url}/cards/${cardId}/likes`, {\n      method: 'DELETE',\n      headers: this._headers\n    }).then(this._checkResponse);\n  }\n  changeAvatar(avatar) {\n    return fetch(`${this._url}/users/me/avatar`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar\n      })\n    }).then(this._checkResponse);\n  }\n}\nconst api = new Api({\n  url: 'https://mesto.nomoreparties.co/v1/cohort-69',\n  headers: {\n    authorization: '67409028-f742-4343-b323-996ffba295cb',\n    'Content-Type': 'application/json'\n  }\n});\nexport default api;","map":{"version":3,"names":["Api","constructor","options","_url","url","_headers","headers","_authorization","authorization","_checkResponse","res","ok","json","Promise","reject","status","getUserInfo","fetch","then","getInitialCards","setUserInfo","name","about","method","body","JSON","stringify","addNewCard","link","getLikes","deleteCard","cardId","addLike","deleteLike","changeAvatar","avatar","api"],"sources":["/Users/oksanazagorodneva/react-mesto-full/frontend/src/utils/Api.js"],"sourcesContent":["class Api {\n    constructor(options) {\n      this._url = options.url;\n      this._headers = options.headers;\n      this._authorization = options.headers.authorization;\n    }\n  \n    _checkResponse(res) {\n      if (res.ok) {\n        return res.json();\n      }\n  \n      return Promise.reject(`Ошибка: ${res.status}`);\n    }\n  \n    getUserInfo() {\n      return fetch(`${this._url}/users/me`, {\n        headers: this._headers\n      })\n      .then(this._checkResponse)\n    }\n  \n    getInitialCards() {\n      return fetch(`${this._url}/cards`, {\n        headers: this._headers\n      })\n      .then(this._checkResponse)\n    }\n  \n    setUserInfo(name, about) {\n      return fetch(`${this._url}/users/me`, {\n        method: 'PATCH',\n        headers: this._headers,\n        body: JSON.stringify({ name, about })\n      })\n      .then(this._checkResponse)\n    }\n  \n    addNewCard(name, link) {\n      return fetch(`${this._url}/cards`, {\n        method: 'POST',\n        headers: this._headers,\n        body: JSON.stringify({ name, link })\n      })\n      .then(this._checkResponse)\n    }\n  \n    getLikes() {\n      return fetch(`${this._url}/cards`, {\n        headers: this._headers\n      })\n      .then(this._checkResponse)\n    }\n  \n    deleteCard(cardId) {\n      return fetch(`${this._url}/cards/${cardId}`, {\n        method: 'DELETE',\n        headers: this._headers\n      })\n      .then(this._checkResponse)\n    }\n  \n    addLike(cardId) {\n      return fetch(`${this._url}/cards/${cardId}/likes`, {\n        method: 'PUT',\n        headers: this._headers\n      })\n      .then(this._checkResponse)\n    }\n  \n    deleteLike(cardId) {\n      return fetch(`${this._url}/cards/${cardId}/likes`, {\n        method: 'DELETE',\n        headers: this._headers\n      })\n      .then(this._checkResponse)\n    }\n  \n    changeAvatar(avatar) {\n      return fetch(`${this._url}/users/me/avatar`, {\n        method: 'PATCH',\n        headers: this._headers,\n        body: JSON.stringify({avatar})\n      })\n      .then(this._checkResponse)\n    }  \n  }\n\nconst api = new Api({\n    url: 'https://mesto.nomoreparties.co/v1/cohort-69',\n    headers: {\n        authorization: '67409028-f742-4343-b323-996ffba295cb',\n        'Content-Type': 'application/json'\n    }\n});\n\nexport default api;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}